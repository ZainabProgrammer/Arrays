Time complexity: O(nlogn)  which is better than O(n) for larger input sizes.

function pickingNumbers(a) {
//Sorting:
    a.sort((x, y) => x - y);

    let maxCount = 0; 
    let currentCount = 1;
    let currentElement = a[0]; 
    let k = 1; 

    // Iterate through the array, starting from the second element

    for (let i = 1; i < a.length; i++) {
        // Check if the absolute difference between the current element and the next element is less than or equal to k
        if (Math.abs(currentElement - a[i]) <= k) {
            currentCount++; // Increment the count
        } else {
            // If the absolute difference exceeds k, start a new subarray
            currentElement = a[i];
            currentCount = 1;
        }

        // Update the maximum count if the current count is greater
        if (currentCount > maxCount) {
            maxCount = currentCount;
        }
    }

    return maxCount;
}


----Sample Example------

const a=[4, 6, 5, 3, 3, 1]
sorted=[1,3,3,4,5,6]

Iteration#1
1-3>k, so simply move current element to ith element which is now 2nd element means 3
and also make current count =1;

Iteration#2
now current element move is 3 at 1st index and ith element is 3 at 2nd index
so 3-3<=k so current count=2

Iteration#3
now  current element is again 2 at index of 1 and ith element is 4 at 3rd index
so, 3-4<=k keeping in view of absolute value so, current count =3

Iteration#4
now current element again is 2 at index of 1 and ith element is 5 at 4th index
so, 3-5>k, so in this case make current element equal to ith element which is 5 at index 4 and current count is reset to 1;

Iteration#5
now current element is 5 at index 4 and ith element is 6 at index 5
so, 5-6<=k which means now current count=2 and loop ends up.
Now at last we compare everytime the current  count with maxCount if current count is greater than maxCount then maxCount is updated and finally returned.
In our case 3 is returned as maxCount which means there is a largest subarray with 3 elements whose difference is less than equal to k.



